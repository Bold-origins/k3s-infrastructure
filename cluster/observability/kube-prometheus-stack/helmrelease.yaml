---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: observability
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: ">=45.0.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 12h
  valuesFrom:
    - kind: ConfigMap
      name: kube-prometheus-stack-values
      valuesKey: values.yaml
  values:
    grafana:
      dashboardProviders:
        dashboards:
          default:
            enabled: true
      resources:
        limits:
          cpu: 1000m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      securityContext:
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      podSecurityContext:
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      persistence:
        enabled: true
        size: 8Gi
    prometheus:
      prometheusSpec:
        podMetadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        retention: 14d
        replicas: 2
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        resources:
          limits:
            cpu: 2000m
            memory: 6Gi
          requests:
            cpu: 750m
            memory: 3Gi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 20Gi
        securityContext:
          fsGroup: 2000
          runAsGroup: 2000
          runAsNonRoot: true
          runAsUser: 1000
        podDisruptionBudget:
          maxUnavailable: 1
    alertmanager:
      alertmanagerSpec:
        replicas: 2
        podAntiAffinity: "soft"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          runAsUser: 1000
          runAsGroup: 2000
          runAsNonRoot: true
          fsGroup: 2000
        podDisruptionBudget:
          maxUnavailable: 1
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 5Gi
    prometheusOperator:
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 256Mi
    kubeStateMetrics:
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 256Mi
    nodeExporter:
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 256Mi